set nocompatible
set noswapfile

" 

" ----------------------------------------------------------------------------
"  Windows Compatible
"   On Windows, also use '.vim' instead of 'vimfiles'; this makes
"   synchronization across (heterogeneous) systems easier.
" ----------------------------------------------------------------------------

if has('win32') || has('win64')
	set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME
	" Tell vim to remember certain things when we exit
	"  '10  :  marks will be remembered for up to 10 previously edited files
	"  "100 :  will save up to 100 lines for each register
	"  :20  :  up to 20 lines of command-line history will be remembered
	"  %    :  saves and restores the buffer list
	"  n... :  where to save the viminfo files

	set viminfo='10,\"100,:20,%,n~/.viminfo
endif


" ----------------------------------------------------------------------------
"  Pathogen Bundle Support
" ----------------------------------------------------------------------------
runtime! autoload/pathogen.vim
silent! call pathogen#helptags()
silent! call pathogen#runtime_append_all_bundles()

colorscheme distinguished

" ----------------------------------------------------------------------------
"  Text Formatting
" ----------------------------------------------------------------------------
filetype plugin indent on  " automatically detect file types
syntax on                  " syntax higlight
set autoindent             " automatic indent new lines
set smartindent            " be smart about it
inoremap # X<BS>#
set nowrap                 " do not wrap lines
set softtabstop=4          " yep, two
set shiftwidth=4           " ..
set tabstop=4
set expandtab              " expand tabs to spaces
set nosmarttab             " fuck tabs
set formatoptions+=n       " support for numbered/bullet lists
"set textwidth=80          " wrap at 80 chars by default
set virtualedit=block      " allow virtual edit in visual block ..

" ----------------------------------------------------------------------------
"  Remapping
" ----------------------------------------------------------------------------

" lead with ,
let mapleader = ","

" ----------------------------------------------------------------------------
"  UI
" ----------------------------------------------------------------------------

set ruler                  " show the cursor position all the time
set noshowcmd              " don't display incomplete commands
set nolazyredraw           " turn off lazy redraw
set number                 " line numbers
set wildmenu               " turn on wild menu
set wildmode=list:longest,full
set ch=2                   " command line height
set backspace=indent,eol,start 
set whichwrap+=<,>,h,l,[,] " backspace and cursor keys wrap to
set shortmess=filtIoOA     " shorten messages
set report=0               " tell us about changes
set nostartofline          " don't jump to the start of line when scrolling
set cursorline             " highlight the current line


" ----------------------------------------------------------------------------
" Visual Cues
" ----------------------------------------------------------------------------

set showmatch              " brackets/braces that is
set mat=5                  " duration to show matching brace (1/10 sec)
set incsearch              " do incremental searching
set laststatus=2           " always show the status line
set ignorecase             " ignore case when searching
set hlsearch               " highlight searches
nmap <silent> <leader>/ :nohlsearch<CR> " clearing higlighted search
set visualbell             " shut the fuck up


" ---------------------------------------------------------------------------
"  Strip all trailing whitespace in file
" ---------------------------------------------------------------------------

function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction

map ,s :call StripWhitespace ()<CR>

" ---------------------------------------------------------------------------
" Use english for spellchecking, but don't spellcheck by default 
" ---------------------------------------------------------------------------
if version >= 700
  set spl=en spell
  set nospell
endif

" ----------------------------------------------------------------------------
" filetypes
" ----------------------------------------------------------------------------

au BufNewFile,BufRead *.cshtml set filetype=html


" ----------------------------------------------------------------------------
" Supertab and XPTemplate support
" ----------------------------------------------------------------------------

" avoid key conflict
let g:SuperTabMappingForward = '<Plug>supertabKey'

" if nothing matched in xpt, try supertab
let g:xptemplate_fallback = '<Plug>supertabKey'

" xpt uses <Tab> as trigger key
let g:xptemplate_key = '<Tab>'

" " use <tab>/<S-tab> to navigate through pum. Optional
" let g:xptemplate_pum_tab_nav = 1

" " xpt triggers only when you typed whole name of a snippet. Optional
" let g:xptemplate_minimal_prefix = 'full'

" tmux will only forward escape sequences to the terminal if surrounded by a
" DCS sequence
" "
" http://sourceforge.net/mailarchive/forum.php?thread_name=AANLkTinkbdoZ8eNR1X2UobLTeww1jFrvfJxTMfKSq-L%2B%40mail.gmail.com&forum_name=tmux-users
"  
 if exists('$TMUX')
   let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
   let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
 else
   let &t_SI = "\<Esc>]50;CursorShape=1\x7"
   let &t_EI = "\<Esc>]50;CursorShape=0\x7"
 endif
